// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: debts/debt.proto

package debts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExelDebtsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debts []*ExelDebts `protobuf:"bytes,1,rep,name=debts,proto3" json:"debts,omitempty"`
}

func (x *ExelDebtsList) Reset() {
	*x = ExelDebtsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExelDebtsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExelDebtsList) ProtoMessage() {}

func (x *ExelDebtsList) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExelDebtsList.ProtoReflect.Descriptor instead.
func (*ExelDebtsList) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{0}
}

func (x *ExelDebtsList) GetDebts() []*ExelDebts {
	if x != nil {
		return x.Debts
	}
	return nil
}

type ExelDebts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId        string  `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientFullName  string  `protobuf:"bytes,2,opt,name=client_full_name,json=clientFullName,proto3" json:"client_full_name,omitempty"`
	ClientPhone     string  `protobuf:"bytes,3,opt,name=client_phone,json=clientPhone,proto3" json:"client_phone,omitempty"`
	TotalAmount     float64 `protobuf:"fixed64,4,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	AmountPaid      float64 `protobuf:"fixed64,5,opt,name=amount_paid,json=amountPaid,proto3" json:"amount_paid,omitempty"`
	DebtsBalance    float64 `protobuf:"fixed64,6,opt,name=debts_balance,json=debtsBalance,proto3" json:"debts_balance,omitempty"`
	LastPaymentDate string  `protobuf:"bytes,7,opt,name=last_payment_date,json=lastPaymentDate,proto3" json:"last_payment_date,omitempty"`
	CurrencyCode    string  `protobuf:"bytes,8,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CompanyId       string  `protobuf:"bytes,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *ExelDebts) Reset() {
	*x = ExelDebts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExelDebts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExelDebts) ProtoMessage() {}

func (x *ExelDebts) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExelDebts.ProtoReflect.Descriptor instead.
func (*ExelDebts) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{1}
}

func (x *ExelDebts) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ExelDebts) GetClientFullName() string {
	if x != nil {
		return x.ClientFullName
	}
	return ""
}

func (x *ExelDebts) GetClientPhone() string {
	if x != nil {
		return x.ClientPhone
	}
	return ""
}

func (x *ExelDebts) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *ExelDebts) GetAmountPaid() float64 {
	if x != nil {
		return x.AmountPaid
	}
	return 0
}

func (x *ExelDebts) GetDebtsBalance() float64 {
	if x != nil {
		return x.DebtsBalance
	}
	return 0
}

func (x *ExelDebts) GetLastPaymentDate() string {
	if x != nil {
		return x.LastPaymentDate
	}
	return ""
}

func (x *ExelDebts) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *ExelDebts) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type FilterExelDebt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency  string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	CompanyId string `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *FilterExelDebt) Reset() {
	*x = FilterExelDebt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExelDebt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExelDebt) ProtoMessage() {}

func (x *FilterExelDebt) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExelDebt.ProtoReflect.Descriptor instead.
func (*FilterExelDebt) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{2}
}

func (x *FilterExelDebt) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FilterExelDebt) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type UserPaymentsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payments []*Payments `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *UserPaymentsRes) Reset() {
	*x = UserPaymentsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPaymentsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPaymentsRes) ProtoMessage() {}

func (x *UserPaymentsRes) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPaymentsRes.ProtoReflect.Descriptor instead.
func (*UserPaymentsRes) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{3}
}

func (x *UserPaymentsRes) GetPayments() []*Payments {
	if x != nil {
		return x.Payments
	}
	return nil
}

type Payments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DebtId        string  `protobuf:"bytes,1,opt,name=debt_id,json=debtId,proto3" json:"debt_id,omitempty"`
	PaymentId     string  `protobuf:"bytes,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	PaymentDate   string  `protobuf:"bytes,3,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	PaymentAmount float64 `protobuf:"fixed64,5,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
}

func (x *Payments) Reset() {
	*x = Payments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payments) ProtoMessage() {}

func (x *Payments) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payments.ProtoReflect.Descriptor instead.
func (*Payments) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{4}
}

func (x *Payments) GetDebtId() string {
	if x != nil {
		return x.DebtId
	}
	return ""
}

func (x *Payments) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *Payments) GetPaymentDate() string {
	if x != nil {
		return x.PaymentDate
	}
	return ""
}

func (x *Payments) GetPaymentAmount() float64 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

type CompanyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CompanyID) Reset() {
	*x = CompanyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyID) ProtoMessage() {}

func (x *CompanyID) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyID.ProtoReflect.Descriptor instead.
func (*CompanyID) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{5}
}

func (x *CompanyID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SumMoney struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string   `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Sum       []*Money `protobuf:"bytes,2,rep,name=sum,proto3" json:"sum,omitempty"`
}

func (x *SumMoney) Reset() {
	*x = SumMoney{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumMoney) ProtoMessage() {}

func (x *SumMoney) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumMoney.ProtoReflect.Descriptor instead.
func (*SumMoney) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{6}
}

func (x *SumMoney) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *SumMoney) GetSum() []*Money {
	if x != nil {
		return x.Sum
	}
	return nil
}

type Money struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Sum      float64 `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *Money) Reset() {
	*x = Money{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{7}
}

func (x *Money) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Money) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type PaymentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payments []*Payment `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *PaymentList) Reset() {
	*x = PaymentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentList) ProtoMessage() {}

func (x *PaymentList) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentList.ProtoReflect.Descriptor instead.
func (*PaymentList) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentList) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstallmentId string  `protobuf:"bytes,2,opt,name=installment_id,json=installmentId,proto3" json:"installment_id,omitempty"`
	PaymentDate   string  `protobuf:"bytes,3,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	PaymentAmount float64 `protobuf:"fixed64,4,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	CreatedAt     string  `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{9}
}

func (x *Payment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Payment) GetInstallmentId() string {
	if x != nil {
		return x.InstallmentId
	}
	return ""
}

func (x *Payment) GetPaymentDate() string {
	if x != nil {
		return x.PaymentDate
	}
	return ""
}

func (x *Payment) GetPaymentAmount() float64 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

func (x *Payment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type PaymentID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *PaymentID) Reset() {
	*x = PaymentID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentID) ProtoMessage() {}

func (x *PaymentID) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentID.ProtoReflect.Descriptor instead.
func (*PaymentID) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{10}
}

func (x *PaymentID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentID) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type FilterPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstallmentId string `protobuf:"bytes,1,opt,name=installment_id,json=installmentId,proto3" json:"installment_id,omitempty"`
	StartDate     string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CompanyId     string `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *FilterPayment) Reset() {
	*x = FilterPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterPayment) ProtoMessage() {}

func (x *FilterPayment) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterPayment.ProtoReflect.Descriptor instead.
func (*FilterPayment) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{11}
}

func (x *FilterPayment) GetInstallmentId() string {
	if x != nil {
		return x.InstallmentId
	}
	return ""
}

func (x *FilterPayment) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *FilterPayment) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *FilterPayment) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

// Debts Messages
type DebtsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Installments []*Debts `protobuf:"bytes,1,rep,name=installments,proto3" json:"installments,omitempty"`
	TotalCount   int64    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *DebtsList) Reset() {
	*x = DebtsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebtsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebtsList) ProtoMessage() {}

func (x *DebtsList) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebtsList.ProtoReflect.Descriptor instead.
func (*DebtsList) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{12}
}

func (x *DebtsList) GetInstallments() []*Debts {
	if x != nil {
		return x.Installments
	}
	return nil
}

func (x *DebtsList) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type FilterDebts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFullyPay     string  `protobuf:"bytes,1,opt,name=is_fully_pay,json=isFullyPay,proto3" json:"is_fully_pay,omitempty"`
	TotalAmountMin float64 `protobuf:"fixed64,2,opt,name=total_amount_min,json=totalAmountMin,proto3" json:"total_amount_min,omitempty"`
	TotalAmountMax float64 `protobuf:"fixed64,3,opt,name=total_amount_max,json=totalAmountMax,proto3" json:"total_amount_max,omitempty"`
	CurrencyCode   string  `protobuf:"bytes,4,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CompanyId      string  `protobuf:"bytes,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Description    string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Page           int32   `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Limit          int32   `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *FilterDebts) Reset() {
	*x = FilterDebts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterDebts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDebts) ProtoMessage() {}

func (x *FilterDebts) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDebts.ProtoReflect.Descriptor instead.
func (*FilterDebts) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{13}
}

func (x *FilterDebts) GetIsFullyPay() string {
	if x != nil {
		return x.IsFullyPay
	}
	return ""
}

func (x *FilterDebts) GetTotalAmountMin() float64 {
	if x != nil {
		return x.TotalAmountMin
	}
	return 0
}

func (x *FilterDebts) GetTotalAmountMax() float64 {
	if x != nil {
		return x.TotalAmountMax
	}
	return 0
}

func (x *FilterDebts) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *FilterDebts) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *FilterDebts) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FilterDebts) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FilterDebts) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PayDebtsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DebtId     string  `protobuf:"bytes,1,opt,name=debt_id,json=debtId,proto3" json:"debt_id,omitempty"`
	PaidAmount float64 `protobuf:"fixed64,2,opt,name=paid_amount,json=paidAmount,proto3" json:"paid_amount,omitempty"`
	CompanyId  string  `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *PayDebtsReq) Reset() {
	*x = PayDebtsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayDebtsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayDebtsReq) ProtoMessage() {}

func (x *PayDebtsReq) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayDebtsReq.ProtoReflect.Descriptor instead.
func (*PayDebtsReq) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{14}
}

func (x *PayDebtsReq) GetDebtId() string {
	if x != nil {
		return x.DebtId
	}
	return ""
}

func (x *PayDebtsReq) GetPaidAmount() float64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *PayDebtsReq) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type DebtsID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *DebtsID) Reset() {
	*x = DebtsID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebtsID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebtsID) ProtoMessage() {}

func (x *DebtsID) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebtsID.ProtoReflect.Descriptor instead.
func (*DebtsID) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{15}
}

func (x *DebtsID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DebtsID) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type Debts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId        string  `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientName      string  `protobuf:"bytes,3,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	ClientPhone     string  `protobuf:"bytes,4,opt,name=client_phone,json=clientPhone,proto3" json:"client_phone,omitempty"`
	TotalAmount     float64 `protobuf:"fixed64,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	AmountPaid      float64 `protobuf:"fixed64,6,opt,name=amount_paid,json=amountPaid,proto3" json:"amount_paid,omitempty"`
	LastPaymentDate string  `protobuf:"bytes,7,opt,name=last_payment_date,json=lastPaymentDate,proto3" json:"last_payment_date,omitempty"`
	IsFullyPaid     bool    `protobuf:"varint,8,opt,name=is_fully_paid,json=isFullyPaid,proto3" json:"is_fully_paid,omitempty"`
	CreatedAt       string  `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CurrencyCode    string  `protobuf:"bytes,10,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CompanyId       string  `protobuf:"bytes,11,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *Debts) Reset() {
	*x = Debts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Debts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Debts) ProtoMessage() {}

func (x *Debts) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Debts.ProtoReflect.Descriptor instead.
func (*Debts) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{16}
}

func (x *Debts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Debts) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Debts) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *Debts) GetClientPhone() string {
	if x != nil {
		return x.ClientPhone
	}
	return ""
}

func (x *Debts) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *Debts) GetAmountPaid() float64 {
	if x != nil {
		return x.AmountPaid
	}
	return 0
}

func (x *Debts) GetLastPaymentDate() string {
	if x != nil {
		return x.LastPaymentDate
	}
	return ""
}

func (x *Debts) GetIsFullyPaid() bool {
	if x != nil {
		return x.IsFullyPaid
	}
	return false
}

func (x *Debts) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Debts) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *Debts) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type DebtsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string  `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TotalAmount  float64 `protobuf:"fixed64,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	CurrencyCode string  `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CompanyId    string  `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *DebtsRequest) Reset() {
	*x = DebtsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebtsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebtsRequest) ProtoMessage() {}

func (x *DebtsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebtsRequest.ProtoReflect.Descriptor instead.
func (*DebtsRequest) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{17}
}

func (x *DebtsRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *DebtsRequest) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *DebtsRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *DebtsRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

// Client Messages
type ClientList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
}

func (x *ClientList) Reset() {
	*x = ClientList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientList) ProtoMessage() {}

func (x *ClientList) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientList.ProtoReflect.Descriptor instead.
func (*ClientList) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{18}
}

func (x *ClientList) GetClients() []*Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

type FilterClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName         string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	PhoneNumber      string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Address          string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TelegramUsername string `protobuf:"bytes,4,opt,name=telegram_username,json=telegramUsername,proto3" json:"telegram_username,omitempty"`
	HasDebt          bool   `protobuf:"varint,5,opt,name=has_debt,json=hasDebt,proto3" json:"has_debt,omitempty"`
	ClientStatus     string `protobuf:"bytes,6,opt,name=client_status,json=clientStatus,proto3" json:"client_status,omitempty"`
	Notes            string `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	Page             int32  `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Offset           int32  `protobuf:"varint,9,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *FilterClient) Reset() {
	*x = FilterClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterClient) ProtoMessage() {}

func (x *FilterClient) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterClient.ProtoReflect.Descriptor instead.
func (*FilterClient) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{19}
}

func (x *FilterClient) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *FilterClient) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *FilterClient) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FilterClient) GetTelegramUsername() string {
	if x != nil {
		return x.TelegramUsername
	}
	return ""
}

func (x *FilterClient) GetHasDebt() bool {
	if x != nil {
		return x.HasDebt
	}
	return false
}

func (x *FilterClient) GetClientStatus() string {
	if x != nil {
		return x.ClientStatus
	}
	return ""
}

func (x *FilterClient) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *FilterClient) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FilterClient) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ClientUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName    string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Address     string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	HasDebt     bool   `protobuf:"varint,5,opt,name=has_debt,json=hasDebt,proto3" json:"has_debt,omitempty"`
	Notes       string `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *ClientUpdate) Reset() {
	*x = ClientUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUpdate) ProtoMessage() {}

func (x *ClientUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUpdate.ProtoReflect.Descriptor instead.
func (*ClientUpdate) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{20}
}

func (x *ClientUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClientUpdate) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *ClientUpdate) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ClientUpdate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ClientUpdate) GetHasDebt() bool {
	if x != nil {
		return x.HasDebt
	}
	return false
}

func (x *ClientUpdate) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type ClientID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId string `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ClientID) Reset() {
	*x = ClientID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientID) ProtoMessage() {}

func (x *ClientID) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientID.ProtoReflect.Descriptor instead.
func (*ClientID) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{21}
}

func (x *ClientID) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ClientID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName         string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	PhoneNumber      string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Address          string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	TelegramUsername string `protobuf:"bytes,5,opt,name=telegram_username,json=telegramUsername,proto3" json:"telegram_username,omitempty"`
	TelegramUserId   string `protobuf:"bytes,6,opt,name=telegram_user_id,json=telegramUserId,proto3" json:"telegram_user_id,omitempty"`
	HasDebt          bool   `protobuf:"varint,7,opt,name=has_debt,json=hasDebt,proto3" json:"has_debt,omitempty"`
	ClientStatus     string `protobuf:"bytes,8,opt,name=client_status,json=clientStatus,proto3" json:"client_status,omitempty"`
	Notes            string `protobuf:"bytes,9,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt        string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{22}
}

func (x *Client) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Client) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Client) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Client) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Client) GetTelegramUsername() string {
	if x != nil {
		return x.TelegramUsername
	}
	return ""
}

func (x *Client) GetTelegramUserId() string {
	if x != nil {
		return x.TelegramUserId
	}
	return ""
}

func (x *Client) GetHasDebt() bool {
	if x != nil {
		return x.HasDebt
	}
	return false
}

func (x *Client) GetClientStatus() string {
	if x != nil {
		return x.ClientStatus
	}
	return ""
}

func (x *Client) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Client) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type CreateClients struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName         string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	PhoneNumber      string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Address          string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	TelegramUsername string `protobuf:"bytes,5,opt,name=telegram_username,json=telegramUsername,proto3" json:"telegram_username,omitempty"`
	Notes            string `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *CreateClients) Reset() {
	*x = CreateClients{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClients) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClients) ProtoMessage() {}

func (x *CreateClients) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClients.ProtoReflect.Descriptor instead.
func (*CreateClients) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{23}
}

func (x *CreateClients) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateClients) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateClients) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateClients) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateClients) GetTelegramUsername() string {
	if x != nil {
		return x.TelegramUsername
	}
	return ""
}

func (x *CreateClients) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_debts_debt_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_debts_debt_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_debts_debt_proto_rawDescGZIP(), []int{24}
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_debts_debt_proto protoreflect.FileDescriptor

var file_debts_debt_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2f, 0x64, 0x65, 0x62, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x64, 0x65, 0x62, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x0d, 0x45, 0x78, 0x65,
	0x6c, 0x44, 0x65, 0x62, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x64, 0x65,
	0x62, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x62, 0x74,
	0x73, 0x2e, 0x45, 0x78, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x73, 0x52, 0x05, 0x64, 0x65, 0x62,
	0x74, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x62, 0x74, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x74, 0x73, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x65,
	0x6c, 0x44, 0x65, 0x62, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x8c, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x1b, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x08,
	0x53, 0x75, 0x6d, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x35, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x39,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x07, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3a, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x44,
	0x65, 0x62, 0x74, 0x73, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x93, 0x02, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x62, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f,
	0x70, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x75, 0x6c,
	0x6c, 0x79, 0x50, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x66, 0x0a, 0x0b, 0x50, 0x61, 0x79,
	0x44, 0x65, 0x62, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x62, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x62, 0x74, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x22, 0x38, 0x0a, 0x07, 0x44, 0x65, 0x62, 0x74, 0x73, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x05,
	0x44, 0x65, 0x62, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x66, 0x75, 0x6c,
	0x6c, 0x79, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x46, 0x75, 0x6c, 0x6c, 0x79, 0x50, 0x61, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x92, 0x01,
	0x0a, 0x0c, 0x44, 0x65, 0x62, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x22, 0x35, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x0c, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x44, 0x65, 0x62, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x64, 0x65, 0x62, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x44, 0x65, 0x62, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22,
	0x39, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x06, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2b, 0x0a, 0x11, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x64, 0x65,
	0x62, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x44, 0x65, 0x62,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xdf, 0x06,
	0x0a, 0x0c, 0x44, 0x65, 0x62, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30,
	0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x64, 0x65,
	0x62, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x0d, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x2b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e,
	0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x0d,
	0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e,
	0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x1a, 0x0d, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x37, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x13, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x11, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x62, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x64, 0x65, 0x62, 0x74,
	0x73, 0x2e, 0x44, 0x65, 0x62, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c,
	0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x62, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x62, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x62, 0x74, 0x73, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x62, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x44, 0x65, 0x62,
	0x74, 0x73, 0x12, 0x12, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x44, 0x65,
	0x62, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x44,
	0x65, 0x62, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x62, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x62, 0x74, 0x73, 0x1a, 0x10, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x62, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x62, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x64,
	0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x10, 0x2e,
	0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x62, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x62, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x78,
	0x65, 0x6c, 0x12, 0x15, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x62, 0x74,
	0x73, 0x2e, 0x45, 0x78, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x53,
	0x75, 0x6d, 0x12, 0x10, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x53, 0x75, 0x6d,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x62, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x0f, 0x2e, 0x64,
	0x65, 0x62, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x0f, 0x2e,
	0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x2e,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x64,
	0x65, 0x62, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x0e,
	0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x44,
	0x65, 0x62, 0x74, 0x73, 0x49, 0x64, 0x12, 0x0e, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x44,
	0x65, 0x62, 0x74, 0x73, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x64, 0x65, 0x62, 0x74,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x12, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x62, 0x74, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x42,
	0x1a, 0x5a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x64, 0x65, 0x62, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_debts_debt_proto_rawDescOnce sync.Once
	file_debts_debt_proto_rawDescData = file_debts_debt_proto_rawDesc
)

func file_debts_debt_proto_rawDescGZIP() []byte {
	file_debts_debt_proto_rawDescOnce.Do(func() {
		file_debts_debt_proto_rawDescData = protoimpl.X.CompressGZIP(file_debts_debt_proto_rawDescData)
	})
	return file_debts_debt_proto_rawDescData
}

var file_debts_debt_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_debts_debt_proto_goTypes = []interface{}{
	(*ExelDebtsList)(nil),   // 0: debts.ExelDebtsList
	(*ExelDebts)(nil),       // 1: debts.ExelDebts
	(*FilterExelDebt)(nil),  // 2: debts.FilterExelDebt
	(*UserPaymentsRes)(nil), // 3: debts.UserPaymentsRes
	(*Payments)(nil),        // 4: debts.Payments
	(*CompanyID)(nil),       // 5: debts.CompanyID
	(*SumMoney)(nil),        // 6: debts.SumMoney
	(*Money)(nil),           // 7: debts.Money
	(*PaymentList)(nil),     // 8: debts.PaymentList
	(*Payment)(nil),         // 9: debts.Payment
	(*PaymentID)(nil),       // 10: debts.PaymentID
	(*FilterPayment)(nil),   // 11: debts.FilterPayment
	(*DebtsList)(nil),       // 12: debts.DebtsList
	(*FilterDebts)(nil),     // 13: debts.FilterDebts
	(*PayDebtsReq)(nil),     // 14: debts.PayDebtsReq
	(*DebtsID)(nil),         // 15: debts.DebtsID
	(*Debts)(nil),           // 16: debts.Debts
	(*DebtsRequest)(nil),    // 17: debts.DebtsRequest
	(*ClientList)(nil),      // 18: debts.ClientList
	(*FilterClient)(nil),    // 19: debts.FilterClient
	(*ClientUpdate)(nil),    // 20: debts.ClientUpdate
	(*ClientID)(nil),        // 21: debts.ClientID
	(*Client)(nil),          // 22: debts.Client
	(*CreateClients)(nil),   // 23: debts.CreateClients
	(*Error)(nil),           // 24: debts.Error
}
var file_debts_debt_proto_depIdxs = []int32{
	1,  // 0: debts.ExelDebtsList.debts:type_name -> debts.ExelDebts
	4,  // 1: debts.UserPaymentsRes.payments:type_name -> debts.Payments
	7,  // 2: debts.SumMoney.sum:type_name -> debts.Money
	9,  // 3: debts.PaymentList.payments:type_name -> debts.Payment
	16, // 4: debts.DebtsList.installments:type_name -> debts.Debts
	22, // 5: debts.ClientList.clients:type_name -> debts.Client
	23, // 6: debts.DebtsService.AddClient:input_type -> debts.CreateClients
	21, // 7: debts.DebtsService.GetClient:input_type -> debts.ClientID
	20, // 8: debts.DebtsService.UpdateClient:input_type -> debts.ClientUpdate
	19, // 9: debts.DebtsService.GetAllClients:input_type -> debts.FilterClient
	17, // 10: debts.DebtsService.CreateDebts:input_type -> debts.DebtsRequest
	15, // 11: debts.DebtsService.GetDebts:input_type -> debts.DebtsID
	14, // 12: debts.DebtsService.PayDebts:input_type -> debts.PayDebtsReq
	13, // 13: debts.DebtsService.GetListDebts:input_type -> debts.FilterDebts
	21, // 14: debts.DebtsService.GetClientDebts:input_type -> debts.ClientID
	2,  // 15: debts.DebtsService.GetDebtsForExel:input_type -> debts.FilterExelDebt
	5,  // 16: debts.DebtsService.GetTotalDebtSum:input_type -> debts.CompanyID
	21, // 17: debts.DebtsService.GetUserTotalDebtSum:input_type -> debts.ClientID
	10, // 18: debts.DebtsService.GetPayment:input_type -> debts.PaymentID
	15, // 19: debts.DebtsService.GetPaymentsByDebtsId:input_type -> debts.DebtsID
	11, // 20: debts.DebtsService.GetPayments:input_type -> debts.FilterPayment
	21, // 21: debts.DebtsService.GetUserPayments:input_type -> debts.ClientID
	22, // 22: debts.DebtsService.AddClient:output_type -> debts.Client
	22, // 23: debts.DebtsService.GetClient:output_type -> debts.Client
	22, // 24: debts.DebtsService.UpdateClient:output_type -> debts.Client
	18, // 25: debts.DebtsService.GetAllClients:output_type -> debts.ClientList
	16, // 26: debts.DebtsService.CreateDebts:output_type -> debts.Debts
	16, // 27: debts.DebtsService.GetDebts:output_type -> debts.Debts
	16, // 28: debts.DebtsService.PayDebts:output_type -> debts.Debts
	12, // 29: debts.DebtsService.GetListDebts:output_type -> debts.DebtsList
	12, // 30: debts.DebtsService.GetClientDebts:output_type -> debts.DebtsList
	0,  // 31: debts.DebtsService.GetDebtsForExel:output_type -> debts.ExelDebtsList
	6,  // 32: debts.DebtsService.GetTotalDebtSum:output_type -> debts.SumMoney
	6,  // 33: debts.DebtsService.GetUserTotalDebtSum:output_type -> debts.SumMoney
	9,  // 34: debts.DebtsService.GetPayment:output_type -> debts.Payment
	8,  // 35: debts.DebtsService.GetPaymentsByDebtsId:output_type -> debts.PaymentList
	8,  // 36: debts.DebtsService.GetPayments:output_type -> debts.PaymentList
	3,  // 37: debts.DebtsService.GetUserPayments:output_type -> debts.UserPaymentsRes
	22, // [22:38] is the sub-list for method output_type
	6,  // [6:22] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_debts_debt_proto_init() }
func file_debts_debt_proto_init() {
	if File_debts_debt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_debts_debt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExelDebtsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExelDebts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExelDebt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPaymentsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumMoney); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Money); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebtsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterDebts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayDebtsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebtsID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Debts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebtsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClients); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_debts_debt_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_debts_debt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_debts_debt_proto_goTypes,
		DependencyIndexes: file_debts_debt_proto_depIdxs,
		MessageInfos:      file_debts_debt_proto_msgTypes,
	}.Build()
	File_debts_debt_proto = out.File
	file_debts_debt_proto_rawDesc = nil
	file_debts_debt_proto_goTypes = nil
	file_debts_debt_proto_depIdxs = nil
}
